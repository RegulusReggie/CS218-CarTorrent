//
// Generated file, do not edit! Created by nedtool 5.2 from src/SegPacketMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __SEGPACKETMESSAGE_M_H
#define __SEGPACKETMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/modules/messages/WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>src/SegPacketMessage.msg:26</tt> by nedtool.
 * <pre>
 * packet SegPacketMessage extends WaveShortMessage
 * {
 *     string packetId;
 *     int segNum;
 *     int numSegs;
 *     unsigned char data[];
 * }
 * </pre>
 */
class SegPacketMessage : public ::WaveShortMessage
{
  protected:
    ::omnetpp::opp_string packetId;
    int segNum;
    int numSegs;
    unsigned char *data; // array ptr
    unsigned int data_arraysize;

  private:
    void copy(const SegPacketMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SegPacketMessage&);

  public:
    SegPacketMessage(const char *name=nullptr, short kind=0);
    SegPacketMessage(const SegPacketMessage& other);
    virtual ~SegPacketMessage();
    SegPacketMessage& operator=(const SegPacketMessage& other);
    virtual SegPacketMessage *dup() const override {return new SegPacketMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getPacketId() const;
    virtual void setPacketId(const char * packetId);
    virtual int getSegNum() const;
    virtual void setSegNum(int segNum);
    virtual int getNumSegs() const;
    virtual void setNumSegs(int numSegs);
    virtual void setDataArraySize(unsigned int size);
    virtual unsigned int getDataArraySize() const;
    virtual unsigned char getData(unsigned int k) const;
    virtual void setData(unsigned int k, unsigned char data);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const SegPacketMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, SegPacketMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SEGPACKETMESSAGE_M_H

